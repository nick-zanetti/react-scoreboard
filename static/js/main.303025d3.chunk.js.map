{"version":3,"sources":["components/Touchdown.js","components/ExtraPoint.js","components/TwoPoint.js","components/Safety.js","components/FieldGoal.js","components/Reset.js","components/AddTeamName.js","components/App.js","serviceWorker.js","index.js"],"names":["Touchdown","props","className","onClick","handleTouchdown","removeTouchdown","ExtraPoint","handleExtraPoint","removeExtraPoint","TwoPoint","handleTwoPoint","removeTwoPoint","Safety","FieldGoal","handleFieldGoal","removeFieldGoal","Reset","handleReset","AddTeamName","handleAddName","e","preventDefault","name","target","elements","value","trim","length","alert","onSubmit","this","id","type","placeholder","React","Component","App","state","score","teamname","setState","prevState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.303025d3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Touchdown = (props) => {\r\n  return (\r\n  <div>\r\n    <button className=\"score-button\"\r\n      onClick={props.handleTouchdown}\r\n    >TD</button>\r\n    <button className=\"back-button\"\r\n      onClick={props.removeTouchdown}\r\n    >--</button>\r\n  </div> \r\n  )\r\n}\r\n\r\nexport default Touchdown","import React from 'react';\r\n\r\nconst ExtraPoint = (props) => {\r\n  return (\r\n  <div>\r\n    <button className=\"score-button\"\r\n      onClick={props.handleExtraPoint}\r\n    >Extra Point</button>\r\n    <button className=\"back-button\"\r\n      onClick={props.removeExtraPoint}\r\n    >\r\n    --</button>\r\n  </div> \r\n  )\r\n}\r\n\r\nexport default ExtraPoint","import React from 'react';\r\n\r\nconst TwoPoint = (props) => {\r\n  return (\r\n  <div>\r\n    <button className=\"score-button\"\r\n      onClick={props.handleTwoPoint}\r\n    >2 PT Conversion</button>\r\n    <button className=\"back-button\"\r\n      onClick={props.removeTwoPoint}\r\n    >--</button>\r\n  </div> \r\n  )\r\n}\r\n\r\nexport default TwoPoint","import React from 'react';\r\n\r\nconst Safety = (props) => {\r\n  return (\r\n  <div>\r\n    <button className=\"score-button\"\r\n      onClick={props.handleTwoPoint}\r\n    >Safety</button>\r\n    <button className=\"back-button\"\r\n      onClick={props.removeTwoPoint}\r\n    >--</button>\r\n  </div> \r\n  )\r\n}\r\n\r\nexport default Safety","import React from 'react';\r\n\r\nconst FieldGoal = (props) => {\r\n  return (\r\n  <div>\r\n    <button className=\"score-button\"\r\n      onClick={props.handleFieldGoal}\r\n    >FG</button>\r\n    <button className=\"back-button\"\r\n      onClick={props.removeFieldGoal}\r\n    >--</button>\r\n  </div> \r\n  )\r\n}\r\n\r\nexport default FieldGoal","import React from 'react';\r\n\r\nconst Reset = (props) => {\r\n  return (\r\n  <div>\r\n    <button className=\"score-button\"\r\n      onClick={props.handleReset}\r\n    >Reset</button>\r\n  </div> \r\n  )\r\n}\r\n\r\nexport default Reset","import React from 'react';\r\n\r\nclass AddTeamName extends React.Component {\r\n  handleAddName = (e) => {\r\n    e.preventDefault();\r\n\r\n    const name = e.target.elements.name.value.trim();\r\n\r\n    if (name.length <= 25) {\r\n      this.props.handleAddName(name)\r\n      e.target.elements.name.value = ''\r\n    }\r\n\r\n    else if (name.length > 25) {\r\n      alert('Name is too long, please abbreviate')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleAddName} id=\"team-name\">\r\n          <input type=\"text\" name=\"name\" placeholder=\"Enter team name...\"></input>\r\n          <button className=\"score-button\">Add Team Name</button>\r\n        </form>\r\n      </div> \r\n      )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default AddTeamName","import React from 'react';\nimport Touchdown from './Touchdown';\nimport ExtraPoint from './ExtraPoint';\nimport TwoPoint from './TwoPoint';\nimport Safety from './Safety';\nimport FieldGoal from './FieldGoal';\nimport Reset from './Reset';\nimport AddTeamName from './AddTeamName';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    score: 0,\n    teamname:''\n  }\n\n  handleTouchdown = () => {\n    this.setState((prevState) => ({score: prevState.score + 6}))\n  }\n  removeTouchdown = () => {\n    this.setState((prevState) => ({score: prevState.score - 6}))\n  }\n  handleExtraPoint = () => {\n    this.setState((prevState) => ({score: prevState.score + 1}))\n  }\n  removeExtraPoint = () => {\n    this.setState((prevState) => ({score: prevState.score - 1}))\n  }\n  handleTwoPoint = () => {\n    this.setState((prevState) => ({score: prevState.score + 2}))\n  }\n  removeTwoPoint = () => {\n    this.setState((prevState) => ({score: prevState.score - 2}))\n  }\n  handleFieldGoal = () => {\n    this.setState((prevState) => ({score: prevState.score + 3}))\n  }\n  removeFieldGoal = () => {\n    this.setState((prevState) => ({score: prevState.score - 3}))\n  }\n  handleReset = () => {\n    this.setState(() => ({score: 0}))\n  }\n  handleAddName = (name) => {\n    this.setState(() => ({teamname: name}))\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"wrapper\">\n        <div id=\"pseudo-wrapper\">\n          <h1 id=\"team-title\">{this.state.teamname}</h1>\n          <p id=\"score-num\">{this.state.score}</p>\n          <div id=\"buttons-wrapper\">\n          <Touchdown \n            handleTouchdown={this.handleTouchdown}\n            removeTouchdown={this.removeTouchdown}\n          />\n          <ExtraPoint \n            handleExtraPoint={this.handleExtraPoint}\n            removeExtraPoint={this.removeExtraPoint}\n          />\n          <TwoPoint \n            handleTwoPoint={this.handleTwoPoint}\n            removeTwoPoint={this.removeTwoPoint}\n          />\n          <Safety \n            handleTwoPoint={this.handleTwoPoint}\n            removeTwoPoint={this.removeTwoPoint}\n          />\n          <FieldGoal \n            handleFieldGoal={this.handleFieldGoal}\n            removeFieldGoal={this.removeFieldGoal}\n          />\n        <Reset \n          handleReset={this.handleReset}\n        />\n        </div>\n        <AddTeamName \n          handleAddName={this.handleAddName}\n        />\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}